apiVersion: v1
kind: Service
metadata:
  labels:
    application: pgwatch
  name: pgwatch-svc
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: pgwatch
      port: 8080
      targetPort: 8080
{{- if or ( eq .Values.pgwatch.prometheus.enable_prom_sink "true" ) (.Values.pgwatch.prometheus.new_prometheus.create_prometheus "true")  }}
    - name: pgwatch-prometheus-sink
      port: 9188
      targetPort: 9188    
{{ end }}
  selector:
    application: pgwatch
    pgwatch.pods.role: pgwatch
---
{{ if eq .Values.pgwatch.grafana.enable_grafana "true" }}
apiVersion: v1
kind: Service
metadata:
  labels:
    application: pgwatch
  name: grafana-svc
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: grafana
      port: 3000
      targetPort: 3000
  selector:
    application: pgwatch
    pgwatch.pods.role: grafana
{{ end }}
---
{{- if eq .Values.pgwatch.postgres.create_metric_database "true" }}
apiVersion: v1
kind: Service
metadata:
  labels:
    application: pgwatch
  name: postgres-svc
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
  selector:
    application: pgwatch
    pgwatch.pods.role: postgres
{{ end }}
---
{{- if eq .Values.pgwatch.prometheus.new_prometheus.create_prometheus "true" }}
apiVersion: v1
kind: Service
metadata:
  labels:
    application: pgwatch
  name: pgwatch-prometheus-svc
spec:
  type: ClusterIP
  ports:
  - name: prometheus
    port: 9090
  selector:
    name: pgwatch-prometheus
{{ end }}